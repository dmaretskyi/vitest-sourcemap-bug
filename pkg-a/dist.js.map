{
  "version": 3,
  "sources": ["../node_modules/.pnpm/base32-decode@1.0.0/node_modules/base32-decode/index.js", "index.js"],
  "sourcesContent": ["var RFC4648 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'\nvar RFC4648_HEX = '0123456789ABCDEFGHIJKLMNOPQRSTUV'\nvar CROCKFORD = '0123456789ABCDEFGHJKMNPQRSTVWXYZ'\n\nfunction readChar (alphabet, char) {\n  var idx = alphabet.indexOf(char)\n\n  if (idx === -1) {\n    throw new Error('Invalid character found: ' + char)\n  }\n\n  return idx\n}\n\nmodule.exports = function base32Decode (input, variant) {\n  var alphabet\n\n  switch (variant) {\n    case 'RFC3548':\n    case 'RFC4648':\n      alphabet = RFC4648\n      input = input.replace(/=+$/, '')\n      break\n    case 'RFC4648-HEX':\n      alphabet = RFC4648_HEX\n      input = input.replace(/=+$/, '')\n      break\n    case 'Crockford':\n      alphabet = CROCKFORD\n      input = input.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')\n      break\n    default:\n      throw new Error('Unknown base32 variant: ' + variant)\n  }\n\n  var length = input.length\n\n  var bits = 0\n  var value = 0\n\n  var index = 0\n  var output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (var i = 0; i < length; i++) {\n    value = (value << 5) | readChar(alphabet, input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n", "import base32Decode from \"base32-decode\";\n\nexport function foo() {\n  base32Decode(\"\", \"Crockford\");\n  throw new Error(\"Test error\");\n}\n"],
  "mappings": "ygBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,KAAIC,EAAU,mCACVC,EAAc,mCACdC,EAAY,mCAEhB,SAASC,EAAUC,EAAUC,EAAM,CACjC,IAAIC,EAAMF,EAAS,QAAQC,CAAI,EAE/B,GAAIC,IAAQ,GACV,MAAM,IAAI,MAAM,4BAA8BD,CAAI,EAGpD,OAAOC,CACT,CAEAP,EAAO,QAAU,SAAuBQ,EAAOC,EAAS,CACtD,IAAIJ,EAEJ,OAAQI,EAAS,CACf,IAAK,UACL,IAAK,UACHJ,EAAWJ,EACXO,EAAQA,EAAM,QAAQ,MAAO,EAAE,EAC/B,MACF,IAAK,cACHH,EAAWH,EACXM,EAAQA,EAAM,QAAQ,MAAO,EAAE,EAC/B,MACF,IAAK,YACHH,EAAWF,EACXK,EAAQA,EAAM,YAAY,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,QAAS,GAAG,EACnE,MACF,QACE,MAAM,IAAI,MAAM,2BAA6BC,CAAO,CACxD,CAUA,QARIC,EAASF,EAAM,OAEfG,EAAO,EACPC,EAAQ,EAERC,EAAQ,EACRC,EAAS,IAAI,WAAYJ,EAAS,EAAI,EAAK,CAAC,EAEvCK,EAAI,EAAGA,EAAIL,EAAQK,IAC1BH,EAASA,GAAS,EAAKR,EAASC,EAAUG,EAAMO,CAAC,CAAC,EAClDJ,GAAQ,EAEJA,GAAQ,IACVG,EAAOD,GAAO,EAAKD,IAAWD,EAAO,EAAM,IAC3CA,GAAQ,GAIZ,OAAOG,EAAO,MAChB,ICtDA,IAAAE,EAAyB,OAElB,SAASC,GAAM,CACpB,UAAAC,SAAa,GAAI,WAAW,EACtB,IAAI,MAAM,YAAY,CAC9B",
  "names": ["require_base32_decode", "__commonJSMin", "exports", "module", "RFC4648", "RFC4648_HEX", "CROCKFORD", "readChar", "alphabet", "char", "idx", "input", "variant", "length", "bits", "value", "index", "output", "i", "import_base32_decode", "foo", "base32Decode"]
}
