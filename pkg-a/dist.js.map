{
  "version": 3,
  "sources": ["../node_modules/.pnpm/base32-decode@1.0.0/node_modules/base32-decode/index.js", "index.js"],
  "sourcesContent": ["var RFC4648 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'\nvar RFC4648_HEX = '0123456789ABCDEFGHIJKLMNOPQRSTUV'\nvar CROCKFORD = '0123456789ABCDEFGHJKMNPQRSTVWXYZ'\n\nfunction readChar (alphabet, char) {\n  var idx = alphabet.indexOf(char)\n\n  if (idx === -1) {\n    throw new Error('Invalid character found: ' + char)\n  }\n\n  return idx\n}\n\nmodule.exports = function base32Decode (input, variant) {\n  var alphabet\n\n  switch (variant) {\n    case 'RFC3548':\n    case 'RFC4648':\n      alphabet = RFC4648\n      input = input.replace(/=+$/, '')\n      break\n    case 'RFC4648-HEX':\n      alphabet = RFC4648_HEX\n      input = input.replace(/=+$/, '')\n      break\n    case 'Crockford':\n      alphabet = CROCKFORD\n      input = input.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')\n      break\n    default:\n      throw new Error('Unknown base32 variant: ' + variant)\n  }\n\n  var length = input.length\n\n  var bits = 0\n  var value = 0\n\n  var index = 0\n  var output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (var i = 0; i < length; i++) {\n    value = (value << 5) | readChar(alphabet, input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n", "import base32Decode from \"base32-decode\";\n\nexport function foo() {\n  base32Decode(\"\", \"Crockford\");\n  throw new Error(\"Test error\");\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAI,UAAU;AACd,QAAI,cAAc;AAClB,QAAI,YAAY;AAEhB,aAAS,SAAU,UAAU,MAAM;AACjC,UAAI,MAAM,SAAS,QAAQ,IAAI;AAE/B,UAAI,QAAQ,IAAI;AACd,cAAM,IAAI,MAAM,8BAA8B,IAAI;AAAA,MACpD;AAEA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU,SAASA,cAAc,OAAO,SAAS;AACtD,UAAI;AAEJ,cAAQ,SAAS;AAAA,QACf,KAAK;AAAA,QACL,KAAK;AACH,qBAAW;AACX,kBAAQ,MAAM,QAAQ,OAAO,EAAE;AAC/B;AAAA,QACF,KAAK;AACH,qBAAW;AACX,kBAAQ,MAAM,QAAQ,OAAO,EAAE;AAC/B;AAAA,QACF,KAAK;AACH,qBAAW;AACX,kBAAQ,MAAM,YAAY,EAAE,QAAQ,MAAM,GAAG,EAAE,QAAQ,SAAS,GAAG;AACnE;AAAA,QACF;AACE,gBAAM,IAAI,MAAM,6BAA6B,OAAO;AAAA,MACxD;AAEA,UAAI,SAAS,MAAM;AAEnB,UAAI,OAAO;AACX,UAAI,QAAQ;AAEZ,UAAI,QAAQ;AACZ,UAAI,SAAS,IAAI,WAAY,SAAS,IAAI,IAAK,CAAC;AAEhD,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,gBAAS,SAAS,IAAK,SAAS,UAAU,MAAM,CAAC,CAAC;AAClD,gBAAQ;AAER,YAAI,QAAQ,GAAG;AACb,iBAAO,OAAO,IAAK,UAAW,OAAO,IAAM;AAC3C,kBAAQ;AAAA,QACV;AAAA,MACF;AAEA,aAAO,OAAO;AAAA,IAChB;AAAA;AAAA;;;ACtDA,2BAAyB;AAElB,SAAS,MAAM;AACpB,2BAAAC,SAAa,IAAI,WAAW;AAC5B,QAAM,IAAI,MAAM,YAAY;AAC9B;",
  "names": ["base32Decode", "base32Decode"]
}
